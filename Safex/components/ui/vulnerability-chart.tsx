'use client';

import React from 'react';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
  ArcElement,
  PointElement,
  LineElement,
  RadialLinearScale,
} from 'chart.js';
import { Bar, Pie, Radar } from 'react-chartjs-2';

// Register ChartJS components
ChartJS.register(
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
  ArcElement,
  PointElement,
  LineElement,
  RadialLinearScale
);

interface VulnerabilityData {
  critical: number;
  high: number;
  medium: number;
  low: number;
  info: number;
}

interface VulnerabilityChartProps {
  data: VulnerabilityData;
  type?: 'bar' | 'pie' | 'radar';
  title?: string;
  className?: string;
}

export function VulnerabilityChart({
  data,
  type = 'bar',
  title = 'Vulnerability Breakdown',
  className = '',
}: VulnerabilityChartProps) {
  const labels = ['Critical', 'High', 'Medium', 'Low', 'Info'];
  
  // Add null check for data
  const safeData = data || { critical: 0, high: 0, medium: 0, low: 0, info: 0 };
  const values = [
    safeData.critical || 0, 
    safeData.high || 0, 
    safeData.medium || 0, 
    safeData.low || 0, 
    safeData.info || 0
  ];
  
  const chartData = {
    labels,
    datasets: [
      {
        label: 'Vulnerabilities',
        data: values,
        backgroundColor: [
          'rgba(255, 0, 0, 0.7)',     // Critical - Red
          'rgba(255, 99, 71, 0.7)',   // High - Tomato
          'rgba(255, 165, 0, 0.7)',   // Medium - Orange
          'rgba(255, 255, 0, 0.7)',   // Low - Yellow
          'rgba(0, 128, 0, 0.7)',     // Info - Green
        ],
        borderColor: [
          'rgba(255, 0, 0, 1)',
          'rgba(255, 99, 71, 1)',
          'rgba(255, 165, 0, 1)',
          'rgba(255, 255, 0, 1)',
          'rgba(0, 128, 0, 1)',
        ],
        borderWidth: 1,
      },
    ],
  };

  const options = {
    responsive: true,
    plugins: {
      legend: {
        position: 'top' as const,
      },
      title: {
        display: true,
        text: title,
      },
    },
    scales: type === 'bar' ? {
      y: {
        beginAtZero: true,
      },
    } : undefined,
  };

  return (
    <div className={`w-full h-full ${className}`}>
      {type === 'bar' && <Bar data={chartData} options={options} />}
      {type === 'pie' && <Pie data={chartData} options={options} />}
      {type === 'radar' && <Radar data={chartData} options={options} />}
    </div>
  );
}

// Component for displaying vulnerability statistics
export function VulnerabilityStats({ data }: { data: VulnerabilityData }) {
  // Add null check for data
  const safeData = data || { critical: 0, high: 0, medium: 0, low: 0, info: 0 };
  const total = safeData.critical + safeData.high + safeData.medium + safeData.low + safeData.info;
  
  return (
    <div className="grid grid-cols-2 md:grid-cols-5 gap-4 mb-6">
      <StatCard title="Critical" value={safeData.critical || 0} color="bg-red-600" textColor="text-white" />
      <StatCard title="High" value={safeData.high || 0} color="bg-red-400" textColor="text-white" />
      <StatCard title="Medium" value={safeData.medium || 0} color="bg-orange-400" textColor="text-white" />
      <StatCard title="Low" value={safeData.low || 0} color="bg-yellow-400" textColor="text-gray-800" />
      <StatCard title="Info" value={safeData.info || 0} color="bg-green-600" textColor="text-white" />
    </div>
  );
}

// Helper component for individual stat cards
function StatCard({ 
  title, 
  value, 
  color, 
  textColor 
}: { 
  title: string; 
  value: number; 
  color: string; 
  textColor: string;
}) {
  return (
    <div className={`${color} ${textColor} rounded-lg p-4 shadow-md`}>
      <h3 className="text-lg font-semibold">{title}</h3>
      <p className="text-3xl font-bold">{value}</p>
    </div>
  );
} 